set nocompatible                " choose no compatibility with legacy vi
set encoding=utf-8 " encoding for editing a file
set fileencoding=utf-8 " encoding for writing to a file

set nocompatible
filetype plugin indent on
syntax on
set nowrap

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required!
Bundle 'gmarik/vundle'

" My bundles here:
"
" original repos on GitHub
Bundle 'tpope/vim-fugitive'
Bundle 'justinmk/vim-sneak'
Bundle 'tpope/vim-rails.git'
Bundle 'bling/vim-airline'
Bundle 'kien/ctrlp.vim'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-endwise'
Bundle 'scrooloose/nerdtree'
Bundle 'ervandew/supertab'
Bundle 'mileszs/ack.vim'
Bundle 'scrooloose/nerdcommenter'
Bundle 'scrooloose/syntastic'
Bundle 'xolox/vim-misc'
Bundle 'xolox/vim-easytags'
Bundle 'majutsushi/tagbar'
Bundle 'tomasr/molokai'
Bundle 'vim-ruby/vim-ruby'
Bundle 'bronson/vim-trailing-whitespace'
Bundle 'elixir-lang/vim-elixir'

let g:markdown_fenced_languages=['ruby', 'javascript', 'elixir', 'clojure', 'sh', 'html']
Bundle 'tpope/vim-markdown'
Bundle 'jtratner/vim-flavored-markdown'

"" Airline bar
let g:airline_theme='molokai'
let g:airline_powerline_fonts=1

" Theme
colorscheme molokai
set t_Co=256
set background=dark

" highlight the current line
set cursorline
" Highlight active column
set cuc cul

" Show linenumbers
set number
set ruler

set guifont=Source\ Code\ Pro\ for\ Powerline:h14

" use Ag instead of ack
let g:ackprg = 'ag --nogroup --nocolor --column'

" ctrlp settings
let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set directory=/tmp                " Keep swap files in one location
set timeoutlen=500

"""""""""""""""""""""""""""""""""""""""
" GENERAL EDITING SETUP
"""""""""""""""""""""""""""""""""""""""
" Prevent Vim from clobbering the scrollback buffer
set t_ti= t_te=

" display incomplete commands
set showcmd

let mapleader = ","

" Set encoding
set encoding=utf-8

" Whitespace stuff
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

" Tab completion
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/gems/*

" Status bar
set laststatus=2

" tab navigation like firefox
nnoremap <C-S-tab> :tabprevious<CR>
nnoremap <C-tab>   :tabnext<CR>
nnoremap <C-t>     :tabnew<CR>
inoremap <C-S-tab> <Esc>:tabprevious<CR>i
inoremap <C-tab>   <Esc>:tabnext<CR>i
inoremap <C-t>     <Esc>:tabnew<CR>

set showcmd                     " display incomplete commands
set number
set ruler

" NERDTree
let NERDTreeChDirMode=2
let NERDTreeShowBookmarks=1
let NERDTreeHightlightCursorline=1
let NERDTreeShowHidden=1 " Show hidden files
nmap <leader>n :NERDTreeToggle<cr>

" Tagbar
nmap <leader>m :TagbarToggle<cr>

" Ack
map <leader>a :Ack! -ai

" DESTROY trailing whitespace
nmap <leader>w :FixWhitespace<cr>

"""""""""""""""""""""""""
" Specific language stuff
augroup elixir
  au!
  au FileType elixir noremap <buffer> <leader>t :!mix test<cr>
augroup END

augroup vimrcEx
  " Clear all autocmds in the group
  autocmd!
  autocmd FileType text setlocal textwidth=78
  " Jump to last cursor position unless it's invalid or in an event handler
  autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal g`\"" |
    \ endif

  " Leave the return key alone when in command line windows, since it's used
  " to run commands there.
  autocmd! CmdwinEnter * :unmap <cr>
  autocmd! CmdwinLeave * :call MapCR()

  au BufReadPost *.thor set syntax=ruby

  " ftdetect isn't being pulled in from vim-elixir for some reason
  au BufRead,BufNewFile *.ex,*.exs set filetype=elixir
  au FileType elixir setl sw=2 sts=2 et iskeyword+=!,?

  " ftdetect for less
  au BufRead,BufNewFile *.less set filetype=less
augroup END


